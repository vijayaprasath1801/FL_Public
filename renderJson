const RenderJSON = ({ data }) => {
  if (typeof data === "object" && data !== null) {
    return (
      <div className="json-container">
        <div className="json-bracket">
          {"{"}
          <span className="json-hex-code">:&wdf</span>
        </div>

        {Object.entries(data).map(([key, value], index) => (
          <div key={index} className="json-item">
            <div className="json-pair">
              <strong className="json-key">{key}:</strong>
              <RenderJSON data={value} />
            </div>
          </div>
        ))}

        <div className="json-bracket">
          {"}"}
          <span className="json-hex-code">:&wdf</span>
        </div>
      </div>
    );
  }

  return <span className="json-value">{JSON.stringify(data)}</span>;
};

.json-container {
  margin-left: 1rem;
  padding-left: 1rem;
  border-left: 2px solid #d1d5db; /* Light gray border */
  max-width: 600px;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.json-item {
  margin-bottom: 0.5rem;
}

.json-pair {
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;
}

.json-key {
  color: #2563eb; /* Blue */
  font-weight: bold;
}

.json-value {
  margin-left: 0.5rem;
  color: #374151; /* Dark gray */
}

.json-bracket {
  color: #16a34a; /* Green */
  font-weight: bold;
}

.json-hex-code {
  color: #9ca3af; /* Subtle gray for hex code */
  font-style: italic;
  margin-left: 0.25rem; /* Space between bracket and hex code */
}
