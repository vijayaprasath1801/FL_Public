import { createSlice, isPending, isFulfilled, isRejected } from "@reduxjs/toolkit";

const initialState = {};

export const createCRUDSlice = () => {
  return createSlice({
    name: "CRUD",
    initialState,
    reducers: {},
    extraReducers: (builder) => {
      builder
        .addMatcher(isPending, (state, action) => {
          const module = action.type.split("/")[0]; // e.g., "users"
          state[module] = {
            ...(state[module] || {}),
            loading: true,
            error: null,
          };
        })
        .addMatcher(isFulfilled, (state, action) => {
          const module = action.type.split("/")[0];
          state[module] = {
            ...(state[module] || {}),
            loading: false,
            data: action.payload,
            error: null,
          };
        })
        .addMatcher(isRejected, (state, action) => {
          const module = action.type.split("/")[0];
          state[module] = {
            ...(state[module] || {}),
            loading: false,
            error: action.payload || action.error?.message || "Unknown error",
          };
        });
    },
  });
};
