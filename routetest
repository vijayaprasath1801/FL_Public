import React, { Suspense } from "react";
import { render, screen } from "@iting-library/react";
import {
  Home,
  Payments,
  AddPaymentsDataset,
  InitiateRun,
  PaymentExecutions,
  PaymentComparison,
  RunIdSummary,
  PaymentDatasetDetails,
} from "../path-to-lazy-imports-file"; // Adjust the path

// Helper function to render lazy components
const renderLazyComponent = (Component: React.LazyExoticComponent<() => JSX.Element>) => {
  render(
    <Suspense fallback={<div>Loading...</div>}>
      <Component />
    </Suspense>
  );
};

describe("Lazy Loaded Components", () => {
  it("renders Home component", async () => {
    renderLazyComponent(Home);
    expect(screen.getByText("Loading...")).toBeInTheDocument();
    expect(await screen.findByText(/Home/i)).toBeInTheDocument();
  });

  it("renders Payments component", async () => {
    renderLazyComponent(Payments);
    expect(screen.getByText("Loading...")).toBeInTheDocument();
    expect(await screen.findByText(/Payments/i)).toBeInTheDocument();
  });

  it("renders AddPaymentsDataset component", async () => {
    renderLazyComponent(AddPaymentsDataset);
    expect(screen.getByText("Loading...")).toBeInTheDocument();
    expect(await screen.findByText(/Add Payment Dataset/i)).toBeInTheDocument();
  });

  it("renders InitiateRun component", async () => {
    renderLazyComponent(InitiateRun);
    expect(screen.getByText("Loading...")).toBeInTheDocument();
    expect(await screen.findByText(/Initiate Run/i)).toBeInTheDocument();
  });

  it("renders PaymentExecutions component", async () => {
    renderLazyComponent(PaymentExecutions);
    expect(screen.getByText("Loading...")).toBeInTheDocument();
    expect(await screen.findByText(/Payment Executions/i)).toBeInTheDocument();
  });

  it("renders PaymentComparison component", async () => {
    renderLazyComponent(PaymentComparison);
    expect(screen.getByText("Loading...")).toBeInTheDocument();
    expect(await screen.findByText(/Payment Comparison/i)).toBeInTheDocument();
  });

  it("renders RunIdSummary component", async () => {
    renderLazyComponent(RunIdSummary);
    expect(screen.getByText("Loading...")).toBeInTheDocument();
    expect(await screen.findByText(/Run ID Summary/i)).toBeInTheDocument();
  });

  it("renders PaymentDatasetDetails component", async () => {
    renderLazyComponent(PaymentDatasetDetails);
    expect(screen.getByText("Loading...")).toBeInTheDocument();
    expect(await screen.findByText(/Payment Dataset Details/i)).toBeInTheDocument();
  });
});
